name: Deploy Trinity App to ECS

on:
  push:
    branches: [ feature/aws ]

jobs:
  build-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    env:
      STAGE: develop
      SERVICE_NAME: trinity

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Instalar wrapper do Maven (se necessário)
        run: mvn -N io.takari:maven:wrapper -Dmaven=3.9.9

      - name: Instalar xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Extrair versão do pom.xml
        id: version
        run: |
          VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEV_AWS_REGION }}

      - name: Login no Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build imagem com GraalVM
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest \
                       -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.version.outputs.version }} .

      - name: Push da imagem para ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.version.outputs.version }}

      - name: Criar nova task definition com nova imagem
        id: task-def
        run: |
          IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.version.outputs.version }}

          aws ecs describe-task-definition \
            --task-definition trinity-task-dev \
            --query "taskDefinition" > task-definition.json

          jq ".containerDefinitions[0].image = \"${IMAGE_URI}\"" task-definition.json > task-def-updated.json
          jq "del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)" task-def-updated.json > final-task-def.json

          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://final-task-def.json \
            --query "taskDefinition.taskDefinitionArn" \
            --output text)

          echo "task_def_arn=$NEW_TASK_DEF_ARN" >> $GITHUB_OUTPUT

      - name: Atualizar serviço ECS
        run: |
          aws ecs update-service \
            --cluster studio-trek-cluster-dev \
            --service trinity-service-dev \
            --task-definition ${{ steps.task-def.outputs.task_def_arn }} \
            --force-new-deployment